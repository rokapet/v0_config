#######################################################################################################################################

# Macro original:
# https://github.com/VoronDesign/VoronUsers/blob/master/orphaned_mods/printer_mods/edwardyeeks/Decontaminator_Purge_Bucket_%26_Nozzle_Scrubber/Macros/nozzle_scrub.cfg

# Those running Fluidd, Mainsail and other front ends will need to use the following location instead:
# [include /home/rokapi/printer_config/macro_clean_nozzle.cfg]

#######################################################################################################################################

# Name of the macro is CLEAN_NOZZLE.

[gcode_macro CLEAN_NOZZLE]

# These parameters define your filament purging. The retract variable is used to retract right after purging to prevent unnecessary
# oozing. Some filament are particularly oozy and may continue to ooze out of the nozzle for a second or two after retracting. The
# ooze dwell variable makes allowance for this. Update as necessary. If you decided to not enable purge, you can ignore this section.
variable_purge_ret:             1            ; Retract length, in mm, after purging to prevent slight oozing. Adjust as necessary.
variable_ooze_dwell:            2            ; Dwell/wait time, in seconds, after purging and retracting.

# These parameters define your travel speeds. Update as necessary.
variable_prep_spd_xy:        3000	         ; Travel (not cleaning) speed along x and y-axis in mm/min.
variable_prep_spd_z:         1500	         ; Travel (not cleaning) speed along z axis in mm/min.
variable_wipe_spd_xy:        5000	         ; Nozzle wipe speed in mm/min.


## For V1.8, you may need to measure where your brush is on the x axis.
variable_brush_start:         180	         ; Position of the edge of the brush on axis X

# Change if your brush width is different.
variable_brush_width:          65	         ; Width of the brush on axis X

# Purge bucket X position.
variable_bucket_purge_pos:        180           ; Position of purge point on axis X


###############################################################################################################################################
###############################################################################################################################################

### From here on, unless you know what you're doing, it's recommended not to change anything. Feel free to peruse the code and reach out to me
### (edwardyeeks#6042) on Discord if you spot any problems!

###############################################################################################################################################
###############################################################################################################################################

# Placeholder. The variable will later be set to contain, at random, a number representing the left or right bucket.
variable_bucket_pos:            1	        

gcode:

   # Parameters from calling the macro
   {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|int %}
   {% set PURGE = params.PURGE|int %}
   {% set PURGE_LEN = params.PURGE_LEN|int %}
   {% set PURGE_SPEED = params.PURGE_SPEED|int %}
   {% set WIPE_QTY = params.WIPE_QTY|int %}

	
   # First, check if the axes are homed
   {% if "xyz" in printer.toolhead.homed_axes %}

      ## Save the gcode state in this macro instance.
      SAVE_GCODE_STATE NAME=clean_nozzle

      ## Set to absolute positioning
      G90

      ## Check if user enabled purge option or not.
      {% if PURGE == 1 %}

         M117 Purging nozzle...
         # Move hotend to bucket, and set hotend LEDs
         HOTEND_RGB_BUSY
         G1 X{bucket_purge_pos} Y300 F{prep_spd_xy}

         ### Perform purge if the temp is up to min temp. If not, it will skip and continue executing rest of macro. Small retract after
         ### purging to minimize any persistent oozing at 5x purge_spd. G4 dwell is in milliseconds, hence * 1000 in formula.
         {% if printer.extruder.temperature >= EXTRUDER_TEMP - 5 %}
		    HOTEND_RGB_CLEANING
            M83      ; relative mode
            G1 E{PURGE_LEN} F{PURGE_SPEED}
            G1 E-{purge_ret} F{PURGE_SPEED * 5}
            G4 P{ooze_dwell * 1000}
            G92 E0   ; reset extruder

         {% else %}

            ## Raise error will stop any macros that CLEAN_NOZZLE is referenced in from proceeding for safety.
            { action_raise_error("Nozzle not hot enough!") }
            M117 Nozzle not hot enough!

         {% endif %}

      {% endif %}
   
      M117 Wiping nozzle...

      ## Position for wipe
      G1 X{brush_start} Y300 F{prep_spd_xy}

      ## Perform wipe
      {% for wipes in range(1, (WIPE_QTY + 1)) %}
         G1 X{brush_start + brush_width} F{wipe_spd_xy}
         G1 X{brush_start} F{wipe_spd_xy}
      {% endfor %}
   
      ## End of the routine (display and hotend LEDs)
	  HOTEND_RGB_READY
      M117 Cleaned!

      ## Restore the gcode state to how it was before the macro.
      RESTORE_GCODE_STATE NAME=clean_nozzle

   {% else %}

      ## Raise error will stop any macros that CLEAN_NOZZLE is referenced in from proceeding for safety.
      { action_raise_error("Please home your axes!") }
      M117 Please home first!

   {% endif %}
   