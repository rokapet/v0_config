#####################################################################
#   LED Control
#####################################################################

# Hotend LEDs
[neopixel hotend_rgb]
pin: EBBCan: PD3
chain_count: 3
# WS2812B - GRB
color_order: GRB
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.5

[gcode_macro _hotend_rgb_vars]
# User settings for the StealthBurner status leds. You can change the status colors and led
# configurations for the logo and nozzle here.
variable_colors: {
        'logo': { # Colors for logo states
            'busy': {'r': 0.4, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'cleaning': {'r': 0.0, 'g': 0.02, 'b': 0.5, 'w': 0.0},
            'calibrating_z': {'r': 0.8, 'g': 0., 'b': 0.35, 'w': 0.0},
            'heating': {'r': 0.3, 'g': 0.18, 'b': 0.0, 'w': 0.0},
            'homing': {'r': 0.0, 'g': 0.6, 'b': 0.2, 'w': 0.0},
            'leveling': {'r': 0.5, 'g': 0.1, 'b': 0.4, 'w': 0.0},
            'meshing': {'r': 0.2, 'g': 1.0, 'b': 0.0, 'w': 0.0},
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'printing': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'standby': {'r': 0.01, 'g': 0.01, 'b': 0.01, 'w': 0.1},
        },
        'nozzle': { # Colors for nozzle states
            'heating': {'r': 0.8, 'g': 0.35, 'b': 0.0, 'w':0.0},
            'off': {'r': 0.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'on': {'r': 0.8, 'g': 0.8, 'b': 0.8, 'w':1.0},
            'standby': {'r': 0.6, 'g': 0.0, 'b': 0.0, 'w':0.0},
        },
        'thermal': {
            'hot': {'r': 1.0, 'g': 0.0, 'b': 0.0, 'w': 0.0},
            'cold': {'r': 0.3, 'g': 0.0, 'b': 0.3, 'w': 0.0}
        }
    }
variable_logo_led_name:         "hotend_rgb" 
# The name of the addressable LED chain that contains the logo LED(s)
variable_logo_idx:              "3" 
# A comma-separated list of indexes LEDs in the logo
variable_nozzle_led_name:       "hotend_rgb"
# The name of the addressable LED chain that contains the nozzle LED(s). This will
# typically be the same LED chain as the logo.
variable_nozzle_idx:            "1,2"
# A comma-separated list of indexes of LEDs in the nozzle

variable_thermal_config: {
        'extruder': {
            'cool_temp': 40,
            'leds': 'logo',
        },
        'heater_bed': {
            'cool_temp': 40,
            'leds': 'nozzle',
        },
    }
# temperatures at which cooling will be considered complete

gcode:
    ; Do nothing

[gcode_macro _set_hotend_rgb]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = params.LED|string %}
    {% set idx = (params.IDX|string).split(',') %}
    {% set transmit_last = params.TRANSMIT|default(1) %}
    
    {% for led_index in idx %}
        {% set transmit=transmit_last if loop.last else 0 %}
        SET_LED led={led} red={red} green={green} blue={blue} white={white} index={led_index} transmit={transmit}
    {% endfor %}

[gcode_macro _set_hotend_rgb_by_name]
gcode:
    {% set leds_name = params.LEDS %}
    {% set color_name = params.COLOR %}
    {% set color = printer["gcode_macro _hotend_rgb_vars"].colors[leds_name][color_name] %}
    {% set led = printer["gcode_macro _hotend_rgb_vars"][leds_name + "_led_name"] %}
    {% set idx = printer["gcode_macro _hotend_rgb_vars"][leds_name + "_idx"] %}
    {% set transmit = params.TRANSMIT|default(1) %}

    _set_hotend_rgb led={led} red={color.r} green={color.g} blue={color.b} white={color.w} idx="{idx}" transmit={transmit}

[gcode_macro _set_logo_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = printer["gcode_macro _hotend_rgb_vars"].logo_led_name %}
    {% set idx = printer["gcode_macro _hotend_rgb_vars"].logo_idx %}
    {% set transmit=params.TRANSMIT|default(1) %}

    _set_hotend_rgb led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

[gcode_macro _set_nozzle_leds]
gcode:
    {% set red = params.RED|default(0)|float %}
    {% set green = params.GREEN|default(0)|float %}
    {% set blue = params.BLUE|default(0)|float %}
    {% set white = params.WHITE|default(0)|float %}
    {% set led = printer["gcode_macro _hotend_rgb_vars"].nozzle_led_name %}
    {% set idx = printer["gcode_macro _hotend_rgb_vars"].nozzle_idx %}
    {% set transmit=params.TRANSMIT|default(1) %}

    _set_hotend_rgb led={led} red={red} green={green} blue={blue} white={white} idx="{idx}" transmit={transmit}

[gcode_macro SET_LOGO_LEDS_OFF]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_logo_leds red=0 blue=0 green=0 white=0 transmit={transmit}

[gcode_macro SET_NOZZLE_LEDS_ON]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_hotend_rgb_by_name leds="nozzle" color="on" transmit={transmit}

[gcode_macro SET_NOZZLE_LEDS_OFF]
gcode:
    {% set transmit=params.TRANSMIT|default(1) %}
    _set_hotend_rgb_by_name leds="nozzle" color="off" transmit={transmit}

[gcode_macro HOTEND_RGB_OFF]
gcode:
    SET_LOGO_LEDS_OFF transmit=0
    SET_NOZZLE_LEDS_OFF

[gcode_macro HOTEND_RGB_READY]
gcode:
    _set_hotend_rgb_by_name leds="logo" color="standby" transmit=0
    _set_hotend_rgb_by_name leds="nozzle" color="standby" transmit=1

[gcode_macro HOTEND_RGB_BUSY]
gcode:
    _set_hotend_rgb_by_name leds="logo" color="busy" transmit=0
    SET_NOZZLE_LEDS_ON

[gcode_macro HOTEND_RGB_HEATING]
gcode:
    _set_hotend_rgb_by_name leds="logo" color="heating" transmit=0
    _set_hotend_rgb_by_name leds="nozzle" color="heating" transmit=1

[gcode_macro HOTEND_RGB_LEVELING]
gcode:
    _set_hotend_rgb_by_name leds="logo" color="leveling" transmit=0
    SET_NOZZLE_LEDS_ON

[gcode_macro HOTEND_RGB_HOMING]
gcode:
    _set_hotend_rgb_by_name leds="logo" color="homing" transmit=0
    SET_NOZZLE_LEDS_ON

[gcode_macro HOTEND_RGB_CLEANING]
gcode:
    _set_hotend_rgb_by_name leds="logo" color="cleaning" transmit=0
    SET_NOZZLE_LEDS_ON

[gcode_macro HOTEND_RGB_MESHING]
gcode:
    _set_hotend_rgb_by_name leds="logo" color="meshing" transmit=0
    SET_NOZZLE_LEDS_ON

[gcode_macro HOTEND_RGB_CALIBRATING_Z]
gcode:
    _set_hotend_rgb_by_name leds="logo" color="calibrating_z" transmit=0
    SET_NOZZLE_LEDS_ON

[gcode_macro HOTEND_RGB_PRINTING]
gcode:
    _set_hotend_rgb_by_name leds="logo" color="printing" transmit=0
    SET_NOZZLE_LEDS_ON

# Chamber Lighting - HE2 Connector
[neopixel case_rgb]
pin: PA8
chain_count: 9
# SK6812 - GRBW
color_order: GRBW
#initial_RED: 0.0
#initial_GREEN: 0.0
#initial_BLUE: 0.0
initial_WHITE: 0.0

[gcode_macro CASE_RGB_RED]
# Turn on Red full brightness, turn all other LED colours off
gcode:
    SET_LED LED=case_rgb RED=1.0 GREEN=0.0 BLUE=0.0 TRANSMIT=1
	
[gcode_macro CASE_RGB_GREEN]
# Turn on Green full brightness, turn all other LED colours off
gcode:
    SET_LED LED=case_rgb RED=0.0 GREEN=1.0 BLUE=0.0 TRANSMIT=1

[gcode_macro CASE_RGB_BLUE]
# Turn on Blue full brightness, turn all other LED colours off
gcode:
    SET_LED LED=case_rgb RED=0.0 GREEN=.75 BLUE=1.0 TRANSMIT=1
	
[gcode_macro CASE_RGB_WHITE]
# Turn on Red, Green and Blue with 80% brightness
gcode:
    SET_LED LED=case_rgb RED=0.80 GREEN=0.80 BLUE=0.80 TRANSMIT=1
    
[gcode_macro CASE_RGB_YELLOW]
# Turn on Red and Green full brightness, turn Blue LEDs off 
gcode:
    SET_LED LED=case_rgb RED=1.0 GREEN=1.0 BLUE=0 TRANSMIT=1

[gcode_macro CASE_RGB_MAGENTA]
# Turn on Red and Green full brightness, turn Blue LEDs off 
gcode:
    SET_LED LED=case_rgb RED=1.0 GREEN=0 BLUE=1.0 TRANSMIT=1

[gcode_macro CASE_RGB_CYAN]
# Turn on Red and Green full brightness, turn Blue LEDs off 
gcode:
    SET_LED LED=case_rgb RED=0 GREEN=1.0 BLUE=1.0 TRANSMIT=1

[gcode_macro CASE_RGB_OFF]
# Turn all case LEDs off 
gcode:
    SET_LED LED=case_rgb RED=0.0 GREEN=0.0 BLUE=0.0 TRANSMIT=1

[gcode_macro CASE_RGB_FLICKER]
gcode:
    {% set LEDTimes = [10, 20, 20, 240, 20, 40, 20, 100, 20, 20, 20, 260, 80, 20, 240, 60, 160, 20, 240, 20, 1000, 20, 20, 40, 100, 20, 274, 340, 860, 20, 1400, 20, 60, 20] %}
    {% set RGB_Red = 0.2 %}
    {% set RGB_Green = 0.2 %}
    {% set RGB_Blue = 0.2 %}
    {% set RGB_Strip = "case_rgb" %}

    {% for toggletime in LEDTimes %}
      {% set ledTime = toggletime|string %}
      {% set loopCount = loop.index %}

      {% if loopCount is divisibleby 2 %} # If the loop index is divisible by 2 (firtst index is NOT so the LEd should turn ON)
        SET_LED LED={RGB_Strip} RED={RGB_Red} GREEN={RGB_Green} BLUE={RGB_Blue} 
        G4 P{ledTime|int}
      {% else %}
        SET_LED LED={RGB_Strip}
        G4 P{ledTime|int}
      {% endif %}

    {% endfor %}

    {% for i in range(1,9) %}  # loops 1,2,3,4,5
      {action_respond_info(i|string)}
      SET_LED LED={RGB_Strip} RED={RGB_Red+(i/10)} GREEN={RGB_Green+(i/10)}  BLUE={RGB_Blue+(i/10)} INDEX=1
      G4 P200
    {% endfor %}
    